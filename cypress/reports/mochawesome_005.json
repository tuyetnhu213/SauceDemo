{
  "stats": {
    "suites": 1,
    "tests": 3,
    "passes": 3,
    "pending": 0,
    "failures": 0,
    "start": "2025-08-07T21:19:35.301Z",
    "end": "2025-08-07T21:19:42.936Z",
    "duration": 7635,
    "testsRegistered": 3,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "ba761e6c-6648-484a-8543-1d3225d47c07",
      "title": "",
      "fullFile": "cypress\\e2e\\cart.cy.js",
      "file": "cypress\\e2e\\cart.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "c9532eca-441b-48bf-99c8-51e38211fa44",
          "title": "Cart Test",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Validate the cart should be null when there is no item selected",
              "fullTitle": "Cart Test Validate the cart should be null when there is no item selected",
              "timedOut": null,
              "duration": 2812,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "inventory.element.cartBtn().should('be.visible').click();\ncy.fixture('url').then(data => {\n  cy.url().should('equal', data.cart);\n});\ncart.element.cartItem().should('not.exist');",
              "err": {},
              "uuid": "907027ed-366a-4a57-997d-d25a866ee975",
              "parentUUID": "c9532eca-441b-48bf-99c8-51e38211fa44",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Validate the cart should be updated when adding all products item",
              "fullTitle": "Cart Test Validate the cart should be updated when adding all products item",
              "timedOut": null,
              "duration": 1568,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Add all products into cart\ninventory.element.productItem().each($el => {\n  inventory.element.addtoCartBtn($el).click();\n  inventory.element.addtoCartBtn($el).should('contain', 'Remove');\n}).then(() => {\n  const prodList = inventory.getProdList();\n  //Go to cart\n  inventory.element.cartBtn().should('be.visible').click();\n  //Assert the cartItem equal with the array Product List\n  cart.element.cartItem().each(($el, index) => {\n    cart.element.inventoryItemName($el).invoke('text').should('eq', prodList[index].name);\n  });\n});",
              "err": {},
              "uuid": "a4b1a101-87e7-4050-b7b1-f891d8647183",
              "parentUUID": "c9532eca-441b-48bf-99c8-51e38211fa44",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Validate the cart when add then remove product",
              "fullTitle": "Cart Test Validate the cart when add then remove product",
              "timedOut": null,
              "duration": 1595,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//add product 1st and assert data in cart\ninventory.addtoCartProduct(1);\ninventory.getProduct(1).then(prod => {\n  inventory.element.cartBtn().should('be.visible').click();\n  cart.getCartItem(1).then(cart => {\n    expect(prod.name).to.equal(cart.name);\n    expect(prod.desc).to.equal(cart.desc);\n    expect(prod.price).to.equal(cart.price);\n    expect(1).to.equal(cart.quantity);\n  });\n});\n//back to inventory page\ncart.element.continueShoppingBtn().click();\n//add product 2nd and assert data in cart\ninventory.addtoCartProduct(2);\ninventory.getProduct(2).then(prod => {\n  inventory.element.cartBtn().should('be.visible').click();\n  cart.getCartItem(2).then(cart => {\n    expect(prod.name).to.equal(cart.name);\n    expect(prod.desc).to.equal(cart.desc);\n    expect(prod.price).to.equal(cart.price);\n    expect(1).to.equal(cart.quantity);\n  });\n});\n//remove product 1 from cart\ncart.removeCart(1);\n//assert product 1 no longer in cart\ncart.element.continueShoppingBtn().click();\ninventory.getProduct(1).then(prod => {\n  inventory.element.cartBtn().should('be.visible').click();\n  cart.getCartItem(1).then(cart => {\n    expect(prod.name).not.to.equal(cart.name);\n  });\n});\n//continue remove product 2 from cart\ncart.removeCart(1);\n//assert no more product in the cart\ncart.element.cartItem().should('not.exist');",
              "err": {},
              "uuid": "9e153a6b-5734-4444-9677-44b804e5b6fd",
              "parentUUID": "c9532eca-441b-48bf-99c8-51e38211fa44",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "907027ed-366a-4a57-997d-d25a866ee975",
            "a4b1a101-87e7-4050-b7b1-f891d8647183",
            "9e153a6b-5734-4444-9677-44b804e5b6fd"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5975,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/reports",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}